name: Security

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Weekly security scan
    - cron: '0 1 * * 1'

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          autoconf \
          automake \
          libtool \
          pkg-config \
          iptables-dev \
          libxtables-dev \
          linux-headers-generic

    - name: Build project
      run: |
        ./autogen.sh
        ./configure --without-kbuild  # Build only userspace for security scan
        make -j$(nproc)

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install OWASP Dependency Check
      run: |
        wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
        unzip dependency-check-8.4.0-release.zip

    - name: Run Dependency Check
      run: |
        ./dependency-check/bin/dependency-check.sh \
          --project "xt_asn" \
          --scan . \
          --format HTML \
          --format XML \
          --out reports/

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports/

  trivy-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  semgrep:
    name: Static Analysis with Semgrep
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/c
        publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
